[{"D:\\react\\4\\linto-demo\\src\\index.js":"1","D:\\react\\4\\linto-demo\\src\\App.js":"2","D:\\react\\4\\linto-demo\\src\\components\\Waveform.js":"3","D:\\react\\4\\linto-demo\\src\\components\\VideoAudio.js":"4","D:\\react\\4\\linto-demo\\src\\components\\Video.js":"5","D:\\react\\4\\linto-demo\\src\\components\\IHM.js":"6","D:\\react\\4\\linto-demo\\src\\components\\CustomSlider.js":"7","D:\\react\\4\\linto-demo\\src\\components\\Provider.js":"8","D:\\react\\4\\linto-demo\\src\\components\\Button.js":"9","D:\\react\\4\\linto-demo\\src\\page\\DemoVideoAudio.js":"10","D:\\react\\4\\linto-demo\\src\\components\\VideoAmi.js":"11","D:\\react\\4\\linto-demo\\src\\components\\Video4Player.js":"12","D:\\react\\4\\linto-demo\\src\\data\\colors.js":"13","D:\\react\\4\\linto-demo\\src\\components\\Map.js":"14","D:\\react\\4\\linto-demo\\src\\components\\CustomSwitch.js":"15","D:\\react\\4\\linto-demo\\src\\components\\CustomSelect.js":"16","D:\\react\\7\\linto-demo\\src\\components\\CustomSelect.js":"17","D:\\react\\7\\linto-demo\\src\\components\\Button.js":"18","D:\\react\\7\\linto-demo\\src\\components\\Video4Player.js":"19","D:\\react\\7\\linto-demo\\src\\components\\Video.js":"20","D:\\react\\7\\linto-demo\\src\\components\\VideoAmi.js":"21","D:\\react\\7\\linto-demo\\src\\App.js":"22","D:\\react\\7\\linto-demo\\src\\data\\colors.js":"23","D:\\react\\7\\linto-demo\\src\\components\\Provider.js":"24","D:\\react\\7\\linto-demo\\src\\components\\VideoAudio.js":"25","D:\\react\\7\\linto-demo\\src\\components\\CustomSwitch.js":"26","D:\\react\\7\\linto-demo\\src\\components\\Waveform.js":"27","D:\\react\\7\\linto-demo\\src\\components\\IHM.js":"28","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\subtitles-generator\\index.js":"29","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\components\\index.js":"30","D:\\react\\7\\linto-demo\\src\\components\\Transcript.js":"31","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\downlaod\\index.js":"32","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\index.js":"33","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\restore-timcodes\\index.js":"34","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\txt\\index.js":"35","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\padTimeToTimecode.js":"36","D:\\react\\7\\linto-demo\\src\\page\\DemoVideoAudio.js":"37","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\dpe-to-slate\\index.js":"38","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\timecodeToSeconds.js":"39","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\slate-to-dpe\\index.js":"40","D:\\react\\7\\linto-demo\\src\\components\\Map.js":"41","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\index.js":"42","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\config\\playbackRates.js":"43","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\ibm\\index.js":"44","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\Toggle\\index.js":"45","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\UpdateTimestamps\\stt-align-node.js":"46","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\vtt.js":"47","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\amazon-transcribe\\group-words-by-speakers.js":"48","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\SpeakerLabel.js":"49","D:\\react\\7\\linto-demo\\src\\index.js":"50","D:\\react\\7\\linto-demo\\src\\components\\CustomSlider.js":"51","D:\\react\\7\\linto-demo\\src\\components\\TranscriptBBC.js":"52","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\index.js":"53","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\index.js":"54","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\digital-paper-edit\\group-words-by-speakers.js":"55","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\index.js":"56","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\video-player\\index.js":"57","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\index.js":"58","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\keyboard-shortcuts\\index.js":"59","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlayerControls\\index.js":"60","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\index.js":"61","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\index.js":"62","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\index.js":"63","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlayerControls\\TimeBox.js":"64","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\digital-paper-edit\\index.js":"65","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\google-stt\\index.js":"66","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\create-entity-map\\index.js":"67","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\CustomEditor.js":"68","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\generate-entities-ranges\\index.js":"69","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\HowDoesThisWork.js":"70","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\UpdateTimestamps\\index.js":"71","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\ExportOptions.js":"72","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\Header.js":"73","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\Word.js":"74","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlaybackRate.js":"75","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\config\\defaultHotKeys.js":"76","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\keyboard-shortcuts\\hot-keys.js":"77","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\ProgressBar.js":"78","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\WrapperBlock.js":"79","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\timecodeToSeconds.js":"80","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\secondsToTimecode.js":"81","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\padTimeToTimecode.js":"82","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\TimecodeOffset\\index.js":"83","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\Select.js":"84","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\index.js":"85","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\draftjs-to-digital-paper-edit\\index.js":"86","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\speechmatics\\index.js":"87","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\amazon-transcribe\\index.js":"88","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\autoEdit2\\index.js":"89","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\bbc-kaldi\\index.js":"90","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\txt-speakers-timecodes\\index.js":"91","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\docx\\index.js":"92","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\txt\\index.js":"93","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\csv.js":"94","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\srt.js":"95","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\ttml.js":"96","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\itt.js":"97","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\premiere.js":"98","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\index.js":"99","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\fold\\index.js":"100","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\line-break-between-sentences\\index.js":"101","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\divide-into-two-lines\\index.js":"102","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\text-segmentation\\index.js":"103","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\bbc-kaldi\\group-words-by-speakers.js":"104","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\format-seconds.js":"105","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\escape-text.js":"106","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\tc-format.js":"107","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\util\\remove-space-after-carriage-return.js":"108","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\util\\remove-space-at-beginning-of-line.js":"109","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\index.js":"110","D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\secondsToTimecode.js":"111"},{"size":278,"mtime":1610455538105,"results":"112","hashOfConfig":"113"},{"size":376,"mtime":1610455713037,"results":"114","hashOfConfig":"113"},{"size":6436,"mtime":1610458997559,"results":"115","hashOfConfig":"113"},{"size":7305,"mtime":1610455834013,"results":"116","hashOfConfig":"113"},{"size":4490,"mtime":1610462619238,"results":"117","hashOfConfig":"113"},{"size":7894,"mtime":1610459849712,"results":"118","hashOfConfig":"113"},{"size":1055,"mtime":1608126779408,"results":"119","hashOfConfig":"113"},{"size":2380,"mtime":1610458361006,"results":"120","hashOfConfig":"113"},{"size":798,"mtime":1610453358827,"results":"121","hashOfConfig":"113"},{"size":867,"mtime":1608242551007,"results":"122","hashOfConfig":"113"},{"size":1950,"mtime":1610385592017,"results":"123","hashOfConfig":"113"},{"size":4511,"mtime":1610454624063,"results":"124","hashOfConfig":"113"},{"size":132,"mtime":1608715999706,"results":"125","hashOfConfig":"113"},{"size":2340,"mtime":1608658898574,"results":"126","hashOfConfig":"113"},{"size":1042,"mtime":1610447619890,"results":"127","hashOfConfig":"113"},{"size":904,"mtime":1610459739791,"results":"128","hashOfConfig":"113"},{"size":904,"mtime":1610542104976,"results":"129","hashOfConfig":"130"},{"size":798,"mtime":1610542104976,"results":"131","hashOfConfig":"130"},{"size":4511,"mtime":1610542104982,"results":"132","hashOfConfig":"130"},{"size":4443,"mtime":1611569493938,"results":"133","hashOfConfig":"130"},{"size":1950,"mtime":1610542104982,"results":"134","hashOfConfig":"130"},{"size":451,"mtime":1611568532063,"results":"135","hashOfConfig":"130"},{"size":132,"mtime":1610542105016,"results":"136","hashOfConfig":"130"},{"size":2517,"mtime":1611570023792,"results":"137","hashOfConfig":"130"},{"size":7558,"mtime":1611151587326,"results":"138","hashOfConfig":"130"},{"size":1042,"mtime":1610542104977,"results":"139","hashOfConfig":"130"},{"size":6436,"mtime":1610542104985,"results":"140","hashOfConfig":"130"},{"size":8982,"mtime":1611573783315,"results":"141","hashOfConfig":"130"},{"size":3567,"mtime":1610702751947,"results":"142","hashOfConfig":"143"},{"size":16092,"mtime":1611572134206,"results":"144","hashOfConfig":"130"},{"size":1766,"mtime":1611574845926,"results":"145","hashOfConfig":"130"},{"size":699,"mtime":1610702751941,"results":"146","hashOfConfig":"143"},{"size":544,"mtime":1610702751879,"results":"147","hashOfConfig":"130"},{"size":391,"mtime":1610702751967,"results":"148","hashOfConfig":"143"},{"size":1541,"mtime":1610702751966,"results":"149","hashOfConfig":"130"},{"size":1295,"mtime":1610702751968,"results":"150","hashOfConfig":"130"},{"size":867,"mtime":1608242551007,"results":"151","hashOfConfig":"130"},{"size":2974,"mtime":1611566763734,"results":"152","hashOfConfig":"130"},{"size":840,"mtime":1610702751969,"results":"153","hashOfConfig":"130"},{"size":2661,"mtime":1611042516113,"results":"154","hashOfConfig":"130"},{"size":2340,"mtime":1610542104979,"results":"155","hashOfConfig":"130"},{"size":1991,"mtime":1611144792061,"results":"156","hashOfConfig":"157"},{"size":453,"mtime":1611144791915,"results":"158","hashOfConfig":"157"},{"size":4010,"mtime":1611144792050,"results":"159","hashOfConfig":"157"},{"size":672,"mtime":1611144791917,"results":"160","hashOfConfig":"157"},{"size":5768,"mtime":1611144791932,"results":"161","hashOfConfig":"157"},{"size":345,"mtime":1611144791958,"results":"162","hashOfConfig":"157"},{"size":1314,"mtime":1611144791981,"results":"163","hashOfConfig":"157"},{"size":912,"mtime":1611144791919,"results":"164","hashOfConfig":"157"},{"size":278,"mtime":1610542105367,"results":"165","hashOfConfig":"130"},{"size":1055,"mtime":1608126779408,"results":"166","hashOfConfig":"130"},{"size":929,"mtime":1611145320790,"results":"167","hashOfConfig":"157"},{"size":1150,"mtime":1611144791980,"results":"168","hashOfConfig":"157"},{"size":2679,"mtime":1611144791954,"results":"169","hashOfConfig":"157"},{"size":3288,"mtime":1611144792017,"results":"170","hashOfConfig":"157"},{"size":1114,"mtime":1611144792070,"results":"171","hashOfConfig":"157"},{"size":1578,"mtime":1611144791944,"results":"172","hashOfConfig":"157"},{"size":14124,"mtime":1611144791911,"results":"173","hashOfConfig":"157"},{"size":1316,"mtime":1611144791909,"results":"174","hashOfConfig":"157"},{"size":4421,"mtime":1611144791913,"results":"175","hashOfConfig":"157"},{"size":4270,"mtime":1611144791917,"results":"176","hashOfConfig":"157"},{"size":16349,"mtime":1611144791937,"results":"177","hashOfConfig":"157"},{"size":20933,"mtime":1611144791933,"results":"178","hashOfConfig":"157"},{"size":820,"mtime":1611144791912,"results":"179","hashOfConfig":"157"},{"size":2200,"mtime":1611144792017,"results":"180","hashOfConfig":"157"},{"size":3496,"mtime":1611144792030,"results":"181","hashOfConfig":"157"},{"size":797,"mtime":1611144792014,"results":"182","hashOfConfig":"157"},{"size":1944,"mtime":1611144791919,"results":"183","hashOfConfig":"157"},{"size":1036,"mtime":1611144792029,"results":"184","hashOfConfig":"157"},{"size":1640,"mtime":1611144791938,"results":"185","hashOfConfig":"157"},{"size":2820,"mtime":1611144791920,"results":"186","hashOfConfig":"157"},{"size":2041,"mtime":1611144791938,"results":"187","hashOfConfig":"157"},{"size":1683,"mtime":1611144791938,"results":"188","hashOfConfig":"157"},{"size":1552,"mtime":1611144791932,"results":"189","hashOfConfig":"157"},{"size":931,"mtime":1611144791911,"results":"190","hashOfConfig":"157"},{"size":2746,"mtime":1611144791915,"results":"191","hashOfConfig":"157"},{"size":2723,"mtime":1611144791909,"results":"192","hashOfConfig":"157"},{"size":914,"mtime":1611144791913,"results":"193","hashOfConfig":"157"},{"size":6516,"mtime":1611144791932,"results":"194","hashOfConfig":"157"},{"size":842,"mtime":1611144792071,"results":"195","hashOfConfig":"157"},{"size":1555,"mtime":1611144792071,"results":"196","hashOfConfig":"157"},{"size":1257,"mtime":1611144792070,"results":"197","hashOfConfig":"157"},{"size":2523,"mtime":1611144791916,"results":"198","hashOfConfig":"157"},{"size":827,"mtime":1611144791914,"results":"199","hashOfConfig":"157"},{"size":3185,"mtime":1611144791959,"results":"200","hashOfConfig":"157"},{"size":1556,"mtime":1611144791954,"results":"201","hashOfConfig":"157"},{"size":4324,"mtime":1611144792061,"results":"202","hashOfConfig":"157"},{"size":4963,"mtime":1611144791982,"results":"203","hashOfConfig":"157"},{"size":2421,"mtime":1611144791993,"results":"204","hashOfConfig":"157"},{"size":2992,"mtime":1611144792003,"results":"205","hashOfConfig":"157"},{"size":566,"mtime":1611144791979,"results":"206","hashOfConfig":"157"},{"size":1875,"mtime":1611144791946,"results":"207","hashOfConfig":"157"},{"size":1223,"mtime":1611144791980,"results":"208","hashOfConfig":"157"},{"size":782,"mtime":1611144791955,"results":"209","hashOfConfig":"157"},{"size":376,"mtime":1611144791956,"results":"210","hashOfConfig":"157"},{"size":589,"mtime":1611144791956,"results":"211","hashOfConfig":"157"},{"size":1712,"mtime":1611144791955,"results":"212","hashOfConfig":"157"},{"size":1058,"mtime":1611144791955,"results":"213","hashOfConfig":"157"},{"size":1340,"mtime":1611144791962,"results":"214","hashOfConfig":"157"},{"size":2079,"mtime":1611144791962,"results":"215","hashOfConfig":"157"},{"size":152,"mtime":1611144791964,"results":"216","hashOfConfig":"157"},{"size":843,"mtime":1611144791961,"results":"217","hashOfConfig":"157"},{"size":799,"mtime":1611144791966,"results":"218","hashOfConfig":"157"},{"size":3734,"mtime":1611144792002,"results":"219","hashOfConfig":"157"},{"size":131,"mtime":1611144791957,"results":"220","hashOfConfig":"157"},{"size":213,"mtime":1611144791957,"results":"221","hashOfConfig":"157"},{"size":260,"mtime":1611144791957,"results":"222","hashOfConfig":"157"},{"size":243,"mtime":1611144791966,"results":"223","hashOfConfig":"157"},{"size":367,"mtime":1611144791966,"results":"224","hashOfConfig":"157"},{"size":1245,"mtime":1610702751967,"results":"225","hashOfConfig":"130"},{"size":1641,"mtime":1610702751969,"results":"226","hashOfConfig":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y2m4vj",{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},"6kf06w",{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfsjty",{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"264"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},"1k2te5r",{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"316"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"316"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"316"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"316"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"316"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"316"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"396","messages":"397","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"316"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"316"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"316"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"316"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"316"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"316"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"446","usedDeprecatedRules":"316"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"449","usedDeprecatedRules":"316"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"452","usedDeprecatedRules":"316"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"455","usedDeprecatedRules":"316"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},"D:\\react\\4\\linto-demo\\src\\index.js",[],"D:\\react\\4\\linto-demo\\src\\App.js",[],["472","473"],"D:\\react\\4\\linto-demo\\src\\components\\Waveform.js",[],"D:\\react\\4\\linto-demo\\src\\components\\VideoAudio.js",[],"D:\\react\\4\\linto-demo\\src\\components\\Video.js",[],"D:\\react\\4\\linto-demo\\src\\components\\IHM.js",[],"D:\\react\\4\\linto-demo\\src\\components\\CustomSlider.js",[],["474","475"],"D:\\react\\4\\linto-demo\\src\\components\\Provider.js",[],"D:\\react\\4\\linto-demo\\src\\components\\Button.js",[],"D:\\react\\4\\linto-demo\\src\\page\\DemoVideoAudio.js",[],"D:\\react\\4\\linto-demo\\src\\components\\VideoAmi.js",[],"D:\\react\\4\\linto-demo\\src\\components\\Video4Player.js",[],"D:\\react\\4\\linto-demo\\src\\data\\colors.js",[],["476","477"],"D:\\react\\4\\linto-demo\\src\\components\\Map.js",[],"D:\\react\\4\\linto-demo\\src\\components\\CustomSwitch.js",[],"D:\\react\\4\\linto-demo\\src\\components\\CustomSelect.js",[],"D:\\react\\7\\linto-demo\\src\\components\\CustomSelect.js",[],["478","479"],"D:\\react\\7\\linto-demo\\src\\components\\Button.js",[],"D:\\react\\7\\linto-demo\\src\\components\\Video4Player.js",[],"D:\\react\\7\\linto-demo\\src\\components\\Video.js",[],"D:\\react\\7\\linto-demo\\src\\components\\VideoAmi.js",[],"D:\\react\\7\\linto-demo\\src\\App.js",[],"D:\\react\\7\\linto-demo\\src\\data\\colors.js",[],"D:\\react\\7\\linto-demo\\src\\components\\Provider.js",[],"D:\\react\\7\\linto-demo\\src\\components\\VideoAudio.js",[],"D:\\react\\7\\linto-demo\\src\\components\\CustomSwitch.js",[],"D:\\react\\7\\linto-demo\\src\\components\\Waveform.js",[],"D:\\react\\7\\linto-demo\\src\\components\\IHM.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\subtitles-generator\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\components\\index.js",["480"],"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport path from \"path\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { createEditor, Editor, Transforms } from \"slate\";\r\n// https://docs.slatejs.org/walkthroughs/01-installing-slate\r\n// Import the Slate components and React plugin.\r\nimport { Slate, Editable, withReact, ReactEditor } from \"slate-react\";\r\nimport { withHistory } from \"slate-history\";\r\nimport convertDpeToSlate from \"../util/dpe-to-slate\";\r\n\r\nimport { useGlobalContext } from \"../../../components/Provider\";\r\n\r\nconst TOOTLIP_LONGER_DELAY = 2000;\r\n\r\nfunction isEmpty(obj) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nexport default function SlateTranscriptEditor(props) {\r\n  const { Player, confDemo } = useGlobalContext();\r\n  const { getTime } = Player;\r\n\r\n  const typeAnnot = confDemo.getConf().typeAnnotationDialogue;\r\n  const actLanguage = confDemo.getConf().actLanguage;\r\n\r\n  const timeTemp = getTime();\r\n  useEffect(() => {\r\n    // Add little offset to componsate react hook delay\r\n    handleTimeUpdated(timeTemp + 1);\r\n  }, [timeTemp]);\r\n\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const editor = useMemo(() => withReact(withHistory(createEditor())), []);\r\n  const [value, setValue] = useState([]);\r\n  const defaultShowSpeakersPreference =\r\n    typeof props.showSpeakers === \"boolean\" ? props.showSpeakers : true;\r\n  const defaultShowTimecodesPreference =\r\n    typeof props.showTimecodes === \"boolean\" ? props.showTimecodes : true;\r\n  // const [showSpeakers, setShowSpeakers] = useState(\r\n  //   defaultShowSpeakersPreference\r\n  // );\r\n  // const [showTimecodes, setShowTimecodes] = useState(\r\n  //   defaultShowTimecodesPreference\r\n  // );\r\n\r\n  const [showSpeakers] = useState(defaultShowSpeakersPreference);\r\n  const [showTimecodes] = useState(defaultShowTimecodesPreference);\r\n\r\n  useEffect(() => {\r\n    if (props.transcriptData) {\r\n      const res = convertDpeToSlate(props.transcriptData);\r\n      setValue(res);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // handles interim results for worrking with a Live STT\r\n  useEffect(() => {\r\n    if (props.transcriptDataLive) {\r\n      const nodes = convertDpeToSlate(props.transcriptDataLive);\r\n      // if the user is selecting the / typing the text\r\n      // Transforms.insertNodes would insert the node at seleciton point\r\n      // instead we check if they are in the editor\r\n      if (editor.selection) {\r\n        // get the position of the last node\r\n        const positionLastNode = [editor.children.length];\r\n        // insert the new nodes at the end of the document\r\n        Transforms.insertNodes(editor, nodes, {\r\n          at: positionLastNode,\r\n        });\r\n      }\r\n      // use not having selection in the editor allows us to also handle the initial use case\r\n      // where the might be no initial results\r\n      else {\r\n        // if there is no selection the default for insertNodes is to add the nodes at the end\r\n        Transforms.insertNodes(editor, nodes);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.transcriptDataLive]);\r\n\r\n  // useEffect(() => {\r\n  //   const getUniqueSpeakers = pluck(\"speaker\");\r\n  //   const uniqueSpeakers = getUniqueSpeakers(value);\r\n  //   setSpeakerOptions(uniqueSpeakers);\r\n  // }, [showSpeakersCheatShet]);\r\n\r\n  // useEffect(() => {\r\n  // Update the document title using the browser API\r\n  // if (mediaRef && mediaRef.current) {\r\n  // setDuration(mediaRef.current.duration);\r\n  // mediaRef.current.addEventListener(\"timeupdate\", handleTimeUpdated);\r\n  // }\r\n  // return function cleanup() {\r\n  // removeEventListener\r\n  // mediaRef.current.removeEventListener(\"timeupdate\", handleTimeUpdated);\r\n  // };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  // Update the document title using the browser API\r\n  // if (mediaRef && mediaRef.current) {\r\n  // Not working\r\n  // setDuration(mediaRef.current.duration);\r\n  // if (\r\n  // mediaRef.current.duration >=\r\n  // MAX_DURATION_FOR_PERFORMANCE_OPTIMIZATION_IN_SECONDS\r\n  // ) {\r\n  // setShowSpeakers(false);\r\n  // showTimecodes(false);\r\n  // }\r\n  // }\r\n  // }, [mediaRef]);\r\n\r\n  const handleTimeUpdated = (time) => {\r\n    setCurrentTime(time);\r\n    // TODO: setting duration here as a workaround\r\n    // setDuration(mediaRef.current.duration);\r\n  };\r\n\r\n  const renderElement = useCallback((props) => {\r\n    switch (props.element.type) {\r\n      case \"timedText\":\r\n        return <TimedTextElement {...props} />;\r\n      default:\r\n        return <DefaultElement {...props} />;\r\n    }\r\n  }, []);\r\n\r\n  const renderLeaf = useCallback(\r\n    ({ attributes, children, leaf }) => {\r\n      return (\r\n        <span\r\n          onDoubleClick={handleTimedTextClick}\r\n          className={\"timecode text\"}\r\n          data-start={children.props.parent.start}\r\n          data-previous-timings={children.props.parent.previousTimings}\r\n          title={children.props.parent.start}\r\n          {...attributes}\r\n        >\r\n          {/* {children} */}\r\n\r\n          <Row>\r\n            <Col xs={actLanguage ? 7 : 12}>{children}</Col>\r\n            {actLanguage && <Col xs={4}>{children.props.parent.actDialog}</Col>}\r\n          </Row>\r\n        </span>\r\n      );\r\n    },\r\n    [actLanguage]\r\n  );\r\n\r\n  //\r\n\r\n  /**\r\n   * `handleSetSpeakerName` is outside of TimedTextElement\r\n   * to improve the overall performance of the editor,\r\n   * especially on long transcripts\r\n   * @param {*} element - props.element, from `renderElement` function\r\n   */\r\n  const handleSetSpeakerName = (element) => {\r\n    const pathToCurrentNode = ReactEditor.findPath(editor, element);\r\n    const oldSpeakerName = element.speaker.toUpperCase();\r\n    const newSpeakerName = prompt(\"Change speaker name\", oldSpeakerName);\r\n    if (newSpeakerName) {\r\n      // const isUpdateAllSpeakerInstances = confirm(`Would you like to replace all occurrences of ${oldSpeakerName} with ${newSpeakerName}?`);\r\n      const isUpdateAllSpeakerInstances = true;\r\n      if (isUpdateAllSpeakerInstances) {\r\n        const rangeForTheWholeEditor = Editor.range(editor, []);\r\n        // Apply transformation to the whole doc, where speaker matches old spekaer name, and set it to new one\r\n        Transforms.setNodes(\r\n          editor,\r\n          { type: \"timedText\", speaker: newSpeakerName },\r\n          {\r\n            at: rangeForTheWholeEditor,\r\n            match: (node) =>\r\n              node.type === \"timedText\" && node.speaker === oldSpeakerName,\r\n          }\r\n        );\r\n      } else {\r\n        // only apply speaker name transformation to current element\r\n        Transforms.setNodes(\r\n          editor,\r\n          { type: \"timedText\", speaker: newSpeakerName },\r\n          { at: pathToCurrentNode }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const TimedTextElement = (props) => {\r\n    let textLg = 12;\r\n    let textXl = 12;\r\n    // if (!showSpeakers && !showTimecodes) {\r\n    //   textLg = 12;\r\n    //   textXl = 12;\r\n    // } else if (showSpeakers && !showTimecodes) {\r\n    //   textLg = 9;\r\n    //   textXl = 9;\r\n    // } else if (!showSpeakers && showTimecodes) {\r\n    //   textLg = 9;\r\n    //   textXl = 10;\r\n    // } else\r\n    if (showSpeakers && showTimecodes) {\r\n      textLg = 6;\r\n      textXl = 7;\r\n    }\r\n\r\n    return (\r\n      <Row {...props.attributes}>\r\n        {showTimecodes && (\r\n          <Col\r\n            contentEditable={false}\r\n            xs={4}\r\n            sm={2}\r\n            md={4}\r\n            lg={3}\r\n            xl={2}\r\n            className={\"p-t-2 text-truncate\"}\r\n          >\r\n            <code\r\n              contentEditable={false}\r\n              style={{ cursor: \"pointer\" }}\r\n              className={\"timecode text-muted unselectable\"}\r\n              onClick={handleTimedTextClick}\r\n              title={props.element.startTimecode}\r\n              data-start={props.element.start}\r\n            >\r\n              {props.element.startTimecode}\r\n            </code>\r\n          </Col>\r\n        )}\r\n        {showSpeakers && (\r\n          <Col\r\n            contentEditable={false}\r\n            xs={8}\r\n            sm={10}\r\n            md={8}\r\n            lg={3}\r\n            xl={3}\r\n            className={\"p-t-2 text-truncate\"}\r\n          >\r\n            <span\r\n              contentEditable={false}\r\n              className={\"text-truncate text-muted unselectable\"}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                fontColor: \"red\",\r\n              }}\r\n              title={props.element.speaker.toUpperCase()}\r\n              onClick={handleSetSpeakerName.bind(this, props.element)}\r\n            >\r\n              {\" \"}\r\n              {props.element.speaker.toUpperCase()}\r\n            </span>\r\n          </Col>\r\n        )}\r\n\r\n        <Col\r\n          xs={12}\r\n          sm={12}\r\n          md={12}\r\n          lg={textLg}\r\n          xl={textXl}\r\n          className={\"p-t-2 mx-auto\"}\r\n        >\r\n          {props.children}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const DefaultElement = (props) => {\r\n    return <p {...props.attributes}>{props.children}</p>;\r\n  };\r\n\r\n  const handleTimedTextClick = (e) => {\r\n    if (e.target.classList.contains(\"timecode\")) {\r\n      // eslint-disable-next-line\r\n      const start = e.target.dataset.start;\r\n      // if (mediaRef && mediaRef.current) {\r\n      //   mediaRef.current.currentTime = parseInt(start);\r\n      //   mediaRef.current.play();\r\n      // }\r\n    } else if (e.target.dataset.slateString) {\r\n      if (e.target.parentNode.dataset.start) {\r\n        // eslint-disable-next-line\r\n        const start = e.target.parentNode.dataset.start;\r\n        // if (mediaRef && mediaRef.current && start) {\r\n        //   mediaRef.current.currentTime = parseInt(start);\r\n        //   mediaRef.current.play();\r\n        // }\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleInsertMusicNote = ()=>{\r\n  //   Transforms.insertText(editor, '♫'); // or ♪\r\n  // }\r\n\r\n  /**\r\n   * See explanation in `src/utils/dpe-to-slate/index.js` for how this function works with css injection\r\n   * to provide current paragaph's highlight.\r\n   * @param {Number} currentTime - float in seconds\r\n   */\r\n  const generatePreviousTimingsUpToCurrent = (currentTime) => {\r\n    // edge case - empty transcription\r\n    if (isEmpty(props.transcriptData)) {\r\n      return \"\";\r\n    }\r\n    const lastWordStartTime =\r\n      props.transcriptData.words[props.transcriptData.words.length - 1].start;\r\n    const lastWordStartTimeInt = parseInt(lastWordStartTime);\r\n    const emptyListOfTimes = Array(lastWordStartTimeInt);\r\n    const listOfTimesInt = [...emptyListOfTimes.keys()];\r\n    const listOfTimesUpToCurrentTimeInt = listOfTimesInt.splice(\r\n      0,\r\n      currentTime,\r\n      0\r\n    );\r\n    const stringlistOfTimesUpToCurrentTimeInt = listOfTimesUpToCurrentTimeInt.join(\r\n      \" \"\r\n    );\r\n    return stringlistOfTimesUpToCurrentTimeInt;\r\n  };\r\n\r\n  const getMediaType = () => {\r\n    const clipExt = path.extname(props.mediaUrl);\r\n    let tmpMediaType = props.mediaType ? props.mediaType : \"video\";\r\n    if (\r\n      clipExt === \".wav\" ||\r\n      clipExt === \".mp3\" ||\r\n      clipExt === \".m4a\" ||\r\n      clipExt === \".flac\" ||\r\n      clipExt === \".aiff\"\r\n    ) {\r\n      tmpMediaType = \"audio\";\r\n    }\r\n    return tmpMediaType;\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        paddingTop: \"1em\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <style scoped>\r\n        {`  .timecode[data-previous-timings*=\"${generatePreviousTimingsUpToCurrent(\r\n          parseInt(currentTime)\r\n        )}\"]{\r\n                color:  #c8c8c8;\r\n            }`}\r\n\r\n        {`span.Word[data-start=\"${parseInt(\r\n          currentTime\r\n        )}\"] { background-color: #a2ffa2 }`}\r\n      </style>\r\n      <style scoped>\r\n        {`.editor-wrapper-container{\r\n                padding: 8px 16px;\r\n                background: #f9f9f9;\r\n                box-shadow: 0 0 10px #ccc;\r\n                height: 40vh;\r\n                overflow: auto;\r\n                justify-content: center,\r\n              }\r\n              /* https://developer.mozilla.org/en-US/docs/Web/CSS/user-select\r\n              TODO: only working in Chrome, not working in Firefox, and Safari - OSX\r\n              if selecting text, not showing selection\r\n              Commented out because it means cannot select speakers and timecode anymore\r\n              which is the intended default behavior but needs to come with export\r\n              functionality to export as plain text, word etc.. otherwise user won't be able\r\n              to get text out of component with timecodes and speaker names in the interim */\r\n              .unselectable {\r\n                -moz-user-select: none;\r\n                -webkit-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n              }\r\n              .timecode:hover{\r\n                text-decoration: underline;\r\n              }\r\n              .timecode.text:hover{\r\n                text-decoration:none;\r\n              }\r\n              `}\r\n      </style>\r\n      {props.showTitle ? (\r\n        <OverlayTrigger\r\n          delay={TOOTLIP_LONGER_DELAY}\r\n          placement={\"bottom\"}\r\n          overlay={<Tooltip id=\"tooltip-disabled\"> {props.title}</Tooltip>}\r\n        >\r\n          <h3 className={\"text-truncate text-left\"}>\r\n            <small className=\"text-muted\">{props.title}</small>\r\n          </h3>\r\n        </OverlayTrigger>\r\n      ) : null}\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Col\r\n          xs={{ span: 12, order: 3 }}\r\n          sm={\r\n            getMediaType() === \"audio\"\r\n              ? { span: 10, order: 2, offset: 1 }\r\n              : { span: 7, order: 2 }\r\n          }\r\n          md={\r\n            getMediaType() === \"audio\"\r\n              ? { span: 10, order: 2, offset: 1 }\r\n              : { span: 7, order: 2 }\r\n          }\r\n          lg={\r\n            getMediaType() === \"audio\"\r\n              ? { span: 8, order: 2, offset: 2 }\r\n              : { span: 8, order: 2 }\r\n          }\r\n          xl={\r\n            getMediaType() === \"audio\"\r\n              ? { span: 8, order: 2, offset: 2 }\r\n              : { span: 7, order: 2 }\r\n          }\r\n        >\r\n          {value.length !== 0 ? (\r\n            <>\r\n              <section className=\"editor-wrapper-container\">\r\n                <Slate\r\n                  editor={editor}\r\n                  value={value}\r\n                  onChange={(value) => {\r\n                    if (props.handleAutoSaveChanges) {\r\n                      props.handleAutoSaveChanges(value);\r\n                    }\r\n                    return setValue(value);\r\n                  }}\r\n                >\r\n                  <Editable\r\n                    readOnly={true}\r\n                    renderElement={renderElement}\r\n                    renderLeaf={renderLeaf}\r\n                  />\r\n                </Slate>\r\n              </section>\r\n            </>\r\n          ) : (\r\n            <section className=\"text-center\">\r\n              <i className=\"text-center\">Loading...</i>\r\n            </section>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nSlateTranscriptEditor.propTypes = {\r\n  transcriptData: PropTypes.object.isRequired,\r\n  mediaUrl: PropTypes.string.isRequired,\r\n  handleSaveEditor: PropTypes.func,\r\n  handleAutoSaveChanges: PropTypes.func,\r\n  autoSaveContentType: PropTypes.string,\r\n  isEditable: PropTypes.bool,\r\n  showTimecodes: PropTypes.bool,\r\n  showSpeakers: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  showTitle: PropTypes.bool,\r\n  mediaType: PropTypes.string,\r\n  transcriptDataLive: PropTypes.object,\r\n};\r\n\r\nSlateTranscriptEditor.defaultProps = {\r\n  showTitle: false,\r\n  showTimecodes: true,\r\n  showSpeakers: true,\r\n  mediaType: \"digitalpaperedit\",\r\n  isEditable: true,\r\n};\r\n","D:\\react\\7\\linto-demo\\src\\components\\Transcript.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\downlaod\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\restore-timcodes\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\txt\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\padTimeToTimecode.js",[],"D:\\react\\7\\linto-demo\\src\\page\\DemoVideoAudio.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\dpe-to-slate\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\timecodeToSeconds.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\export-adapters\\slate-to-dpe\\index.js",[],"D:\\react\\7\\linto-demo\\src\\components\\Map.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\index.js",[],["481","482"],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\config\\playbackRates.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\ibm\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\Toggle\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\UpdateTimestamps\\stt-align-node.js",["483","484"],"// code obtained from https://github.com/bbc/stt-align-node\r\n\r\nimport { toWords } from 'number-to-words';\r\nimport difflib from 'difflib';\r\nimport everpolate from 'everpolate';\r\n\r\n/**\r\n * https://stackoverflow.com/questions/175739/built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number\r\n * @param {*}  num\r\n * @return {boolean} - if it's a number true, if it's not false.\r\n */\r\nfunction isANumber(num) {\r\n  return !isNaN(num);\r\n}\r\n\r\nfunction removeTrailingPunctuation(str) {\r\n  return str.replace(/\\.$/, '');\r\n}\r\n\r\n/**\r\n * removes capitalization, punctuation and converts numbers to letters\r\n * @param {string} wordText - word text\r\n * @return {string}\r\n * handles edge case if word is undefined, and returns undefined in that instance\r\n */\r\nfunction normaliseWord(wordText) {\r\n  if (wordText) {\r\n    const wordTextResult = wordText.toLowerCase().trim().replace(/[^a-z|0-9|.]+/g, '');\r\n    if (isANumber(wordTextResult)) {\r\n      const sanitizedWord = removeTrailingPunctuation(wordTextResult);\r\n      if (sanitizedWord !== '') {\r\n        return toWords(sanitizedWord);\r\n      }\r\n    }\r\n\r\n    return wordTextResult;\r\n  } else {\r\n    return wordText;\r\n  }\r\n}\r\n\r\n// using neighboring words to set missing start and end time when present\r\nfunction interpolationOptimization(wordsList) {\r\n  return wordsList.map((word, index) => {\r\n    let wordTmp = word;\r\n    // setting the start time of each unmatched word to the previous word’s end time - when present\r\n    // does not first element in list edge case\r\n\r\n    if (('start' in word) && (index !== 0)) {\r\n      const previousWord = wordsList[index - 1];\r\n      if ('end' in previousWord) {\r\n        wordTmp = {\r\n          start: previousWord.end,\r\n          end: word.end,\r\n          word: word.word\r\n        };\r\n      }\r\n    }\r\n    // TODO: handle first item ?\r\n    // setting the end time of each unmatched word to the next word’s start time - when present\r\n    // does handle last element in list edge case\r\n    if (('end' in word) && (index !== (wordsList.length - 1))) {\r\n      const nextWord = wordsList[index + 1];\r\n      if ('start' in nextWord) {\r\n        wordTmp = {\r\n          end: nextWord.start,\r\n          start: word.start,\r\n          word: word.word\r\n        };\r\n      }\r\n    }\r\n\r\n    // TODO: handle last item ?\r\n    return wordTmp;\r\n  });\r\n}\r\n\r\n// after the interpolation, some words have overlapping timecodes.\r\n// the end time of the previous word is greater then the start of the current word\r\n// altho negligible when using in a transcript editor context\r\n// we want to avoid this, coz it causes issues when using the time of the words to generate\r\n// auto segmented captions. As it results in sentence\r\n// boundaries overlapping on screen during playback\r\nfunction adjustTimecodesBoundaries(words) {\r\n\r\n  return words.map((word, index, arr) => {\r\n    // excluding first element\r\n    if (index != 0 ) {\r\n      const previousWord = arr[index - 1];\r\n      const currentWord = word;\r\n      if (previousWord.end > currentWord.start) {\r\n        word.start = previousWord.end;\r\n      }\r\n\r\n      return word;\r\n    }\r\n\r\n    return word;\r\n  });\r\n}\r\n\r\nfunction interpolate(wordsList) {\r\n  const indicies = [ ...Array(wordsList.length).keys() ];\r\n  const indiciesWithStart = [];\r\n  const indiciesWithEnd = [];\r\n  const startTimes = [];\r\n  const endTimes = [];\r\n\r\n  wordsList.forEach((word, index) => {\r\n    if ('start' in word) {\r\n      indiciesWithStart.push(index);\r\n      startTimes.push(word.start);\r\n    }\r\n\r\n    if ('end' in word) {\r\n      indiciesWithEnd.push(index);\r\n      endTimes.push(word.end);\r\n    }\r\n  });\r\n  // http://borischumichev.github.io/everpolate/#linear\r\n  const outStartTimes = everpolate.linear(indicies, indiciesWithStart, startTimes);\r\n  const outEndTimes = everpolate.linear(indicies, indiciesWithEnd, endTimes);\r\n  const wordsResults = wordsList.map((word, index) => {\r\n    if (!('start' in word)) {\r\n      word.start = outStartTimes[index];\r\n    }\r\n    if (!('end' in word)) {\r\n      word.end = outEndTimes[index];\r\n    }\r\n\r\n    return word;\r\n  });\r\n\r\n  return adjustTimecodesBoundaries(wordsResults);\r\n}\r\n\r\n/**\r\n *\r\n * @param {array} sttWords - array of STT words\r\n * @param {array} transcriptWords - array of base text accurate words\r\n */\r\nfunction alignWords(sttWords, transcriptWords) {\r\n  // # convert words to lowercase and remove numbers and special characters\r\n  const sttWordsStripped = sttWords.map((word) => {\r\n    return normaliseWord(word.word);\r\n  });\r\n\r\n  const transcriptWordsStripped = transcriptWords.map((word) => {\r\n    return normaliseWord(word);\r\n  });\r\n  // # create empty list to receive data\r\n  const transcriptData = [];\r\n  // empty objects as place holder\r\n  transcriptWords.forEach(() => {\r\n    transcriptData.push({});\r\n  });\r\n  // # populate transcriptData with matching words\r\n  // // if they are same length, just interpolate words ?\r\n  // http://qiao.github.io/difflib.js/\r\n  const matcher = new difflib.SequenceMatcher(null, sttWordsStripped, transcriptWordsStripped);\r\n  const opCodes = matcher.getOpcodes();\r\n\r\n  opCodes.forEach((opCode) => {\r\n    const matchType = opCode[0];\r\n    const sttStartIndex = opCode[1];\r\n    const sttEndIndex = opCode[2];\r\n    const baseTextStartIndex = opCode[3];\r\n\r\n    if (matchType === 'equal' ) {\r\n      // slice does not not include the end - hence +1\r\n      const sttDataSegment = sttWords.slice(sttStartIndex, sttEndIndex);\r\n      transcriptData.splice(baseTextStartIndex, sttDataSegment.length, ...sttDataSegment);\r\n    }\r\n\r\n    transcriptData.forEach((wordObject, index) => {\r\n      wordObject.word = transcriptWords[index];\r\n    });\r\n    // # replace words with originals\r\n  });\r\n\r\n  // # fill in missing timestamps\r\n  return interpolate(transcriptData);\r\n}\r\n\r\nexport default alignWords;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\vtt.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\amazon-transcribe\\group-words-by-speakers.js",[],["485","486"],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\SpeakerLabel.js",[],"D:\\react\\7\\linto-demo\\src\\index.js",[],"D:\\react\\7\\linto-demo\\src\\components\\CustomSlider.js",[],"D:\\react\\7\\linto-demo\\src\\components\\TranscriptBBC.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\index.js",["487","488","489","490","491","492","493","494","495","496","497","498","499"],"import draftToTxt from './txt/index';\r\nimport draftToDocx from './docx/index';\r\nimport draftToTxtSpeakersTimecodes from './txt-speakers-timecodes/index';\r\nimport draftToDigitalPaperEdit from './draftjs-to-digital-paper-edit/index.js';\r\nimport subtitlesGenerator from './subtitles-generator/index.js';\r\n/**\r\n * Adapters for Draft.js conversion\r\n * @param {json} blockData - Draft.js blocks\r\n * @param {string} exportFormat - the type of file supported by the available adapters\r\n */\r\n\r\nconst exportAdapter = (blockData, exportFormat, transcriptTitle) => {\r\n  switch (exportFormat) {\r\n  case 'draftjs':\r\n    return { data: blockData, ext: 'json' };\r\n  case 'txt':\r\n    return { data: draftToTxt(blockData), ext: 'txt' };\r\n  case 'docx':\r\n    return { data: draftToDocx(blockData, transcriptTitle), ext: 'docx' };\r\n  case 'txtspeakertimecodes':\r\n    return { data: draftToTxtSpeakersTimecodes(blockData), ext: 'txt' };\r\n  case 'digitalpaperedit':\r\n    return { data: draftToDigitalPaperEdit(blockData), ext: 'json' };\r\n  case 'srt':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    const srtContent = subtitlesGenerator({ words, type: 'srt', numberOfCharPerLine: 35 });\r\n\r\n    return { data: srtContent, ext: 'srt' };\r\n\r\n  case 'premiereTTML':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'premiere' });\r\n\r\n    return { data: content, ext: 'ttml' };\r\n  case 'ttml':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'ttml' });\r\n\r\n    return { data: content, ext: 'ttml' };\r\n  case 'itt':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'itt' });\r\n\r\n    return { data: content, ext: 'itt' };\r\n\r\n  case 'csv':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'csv' });\r\n\r\n    return { data: content, ext: 'csv' };\r\n  case 'vtt':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'vtt' });\r\n\r\n    return { data: content, ext: 'vtt' };\r\n  case 'json-captions':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'json' });\r\n\r\n    return { data: content, ext: 'json' };\r\n  case 'pre-segment-txt':\r\n    var { words } = draftToDigitalPaperEdit(blockData);\r\n    var content = subtitlesGenerator({ words, type: 'pre-segment-txt' });\r\n\r\n    return { data: content, ext: 'txt' };\r\n  default:\r\n    // code block\r\n    console.error('Did not recognise the export format');\r\n  }\r\n};\r\n\r\nexport default exportAdapter;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\digital-paper-edit\\group-words-by-speakers.js",["500"],"/**\r\n edge cases\r\n- more segments then words - not an issue if you start by matching words with segment\r\nand handle edge case where it doesn't find a match\r\n- more words then segments - orphan words?\r\n*\r\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\r\n```js\r\n{\r\n  \"words\": [\r\n    {\r\n      \"id\": 0,\r\n      \"start\": 13.02,\r\n      \"end\": 13.17,\r\n      \"text\": \"There\"\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"start\": 13.17,\r\n      \"end\": 13.38,\r\n      \"text\": \"is\"\r\n    },\r\n    ...\r\n    ],\r\n  \"paragraphs\": [\r\n    {\r\n      \"id\": 0,\r\n      \"start\": 13.02,\r\n      \"end\": 13.86,\r\n      \"speaker\": \"TBC 00\"\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"start\": 13.86,\r\n      \"end\": 19.58,\r\n      \"speaker\": \"TBC 1\"\r\n    },\r\n    ...\r\n  ]\r\n}\r\n```\r\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\r\n```js\r\n[\r\n  {\r\n    \"words\": [\r\n      {\r\n        \"id\": 0,\r\n        \"start\": 13.02,\r\n        \"end\": 13.17,\r\n        \"text\": \"There\"\r\n      },\r\n      {\r\n        \"id\": 1,\r\n        \"start\": 13.17,\r\n        \"end\": 13.38,\r\n        \"text\": \"is\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"start\": 13.38,\r\n        \"end\": 13.44,\r\n        \"text\": \"a\"\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"start\": 13.44,\r\n        \"end\": 13.86,\r\n        \"text\": \"day.\"\r\n      }\r\n    ],\r\n    \"text\": \"There is a day.\",\r\n    \"speaker\": \"TBC 00\"\r\n  },\r\n  ...\r\n]\r\n```\r\n */\r\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\r\n  const result = addWordsToSpeakersParagraphs(words, segments);\r\n\r\n  return result;\r\n};\r\n\r\nfunction addWordsToSpeakersParagraphs (words, segments) {\r\n  const results = [];\r\n  let currentSegment = 'UKN';\r\n  let currentSegmentIndex = 0;\r\n  let previousSegmentIndex = 0;\r\n  let paragraph = { words: [], text: '', speaker: '' };\r\n  words.forEach((word) => {\r\n    currentSegment = findSegmentForWord(word, segments);\r\n    // if a segment exists for the word\r\n    if (currentSegment) {\r\n      currentSegmentIndex = segments.indexOf(currentSegment);\r\n      if (currentSegmentIndex === previousSegmentIndex) {\r\n        paragraph.words.push(word);\r\n        paragraph.text += word.text + ' ';\r\n        paragraph.speaker = currentSegment.speaker;\r\n      }\r\n      else {\r\n        previousSegmentIndex = currentSegmentIndex;\r\n        paragraph.text.trim();\r\n        results.push(paragraph);\r\n        paragraph = { words: [], text: '', speaker: '' };\r\n        paragraph.words.push(word);\r\n        paragraph.text += word.text + ' ';\r\n        paragraph.speaker = currentSegment.speaker;\r\n      }\r\n    }\r\n  });\r\n  results.push(paragraph);\r\n\r\n  return results;\r\n}\r\n\r\n/**\r\n* Helper functions\r\n*/\r\n\r\n/**\r\n* given word start and end time attributes\r\n* looks for segment range that contains that word\r\n* if it doesn't find any it returns a segment with `UKN`\r\n* speaker attributes.\r\n* @param {object} word - word object\r\n* @param {array} segments - list of segments objects\r\n* @return {object} - a single segment whose range contains the word\r\n*/\r\nfunction findSegmentForWord(word, segments) {\r\n\r\n  const tmpSegment = segments.find((seg) => {\r\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\r\n      return seg;\r\n    }\r\n  });\r\n\r\n  return tmpSegment;\r\n}\r\n\r\nexport default groupWordsInParagraphsBySpeakers;","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\video-player\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\keyboard-shortcuts\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlayerControls\\index.js",["501"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isEqual from 'react-fast-compare';\r\n\r\nimport {\r\n  faSave,\r\n  faTv,\r\n  faPlay,\r\n  faPause,\r\n  faBackward,\r\n  faForward,\r\n  faUndo,\r\n  faVolumeUp,\r\n  faVolumeMute\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport PlaybackRate from '../PlaybackRate';\r\nimport TimeBox from './TimeBox.js';\r\n\r\nimport style from './index.module.scss';\r\n\r\nclass PlayerControls extends React.Component {\r\n\r\n  shouldComponentUpdate = (nextProps) => {\r\n    return !isEqual(this.props, nextProps);\r\n  }\r\n\r\n  setIntervalHelperBackward = () => {\r\n    // this.props.skipBackward();\r\n    this.interval = setInterval(() => {\r\n      this.props.skipBackward();\r\n    }, 300);\r\n  }\r\n\r\n  setIntervalHelperForward = () => {\r\n    // this.props.skipForward();\r\n    this.interval = setInterval(() => {\r\n      this.props.skipForward();\r\n    }, 300);\r\n  }\r\n\r\n  clearIntervalHelper = () => {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const pictureInPicture = ('pictureInPictureEnabled' in document) ? ( <button\r\n      value=\"Picture-in-picture\"\r\n      title=\"Picture-in-picture\"\r\n      className={ `${ style.playerButton } ${ style.pip }` }\r\n      onClick={ this.props.pictureInPicture }>\r\n      <FontAwesomeIcon icon={ faTv } />\r\n    </button> ) : null;\r\n\r\n    return (\r\n      <div className={ style.playerControls }>\r\n        <TimeBox\r\n          promptSetCurrentTime={ this.props.promptSetCurrentTime }\r\n          currentTime={ this.props.currentTime }\r\n          duration={ this.props.duration }\r\n        />\r\n\r\n        <div className={ style.btnsGroup }>\r\n          <button\r\n            value=\"seek backward by a set interval: alt r\"\r\n            title=\"seek backward by a set interval: alt r\"\r\n            className={ style.playerButton }\r\n            onClick={ this.props.rollback }>\r\n            <FontAwesomeIcon icon={ faUndo } />\r\n          </button>\r\n\r\n          <button\r\n            value=\"seek backward: alt j\"\r\n            title=\"seek backward: alt j\"\r\n            className={ style.playerButton }\r\n            onMouseDown={ this.setIntervalHelperBackward }\r\n            onMouseUp={ this.clearIntervalHelper }\r\n            onClick={ () => {this.props.skipBackward(); } }>\r\n            <FontAwesomeIcon icon={ faBackward } />\r\n          </button>\r\n\r\n          <button\r\n            value=\"Play/Pause: alt k\"\r\n            title=\"Play/Pause: alt k\"\r\n            className={ style.playerButton }\r\n            onClick={ this.props.playMedia }>\r\n            {this.props.isPlaying ? <FontAwesomeIcon icon={ faPause } /> : <FontAwesomeIcon icon={ faPlay } />}\r\n          </button>\r\n\r\n          <button\r\n            value=\"seek forward: alt l\"\r\n            title=\"seek forward: alt l\"\r\n            className={ style.playerButton }\r\n            onMouseDown={ this.setIntervalHelperForward }\r\n            onMouseUp={ this.clearIntervalHelper }\r\n            onClick={ () => {this.props.skipForward(); } }>\r\n            <FontAwesomeIcon icon={ faForward } />\r\n          </button>\r\n        </div>\r\n\r\n        <div className={ style.btnsGroup }>\r\n          <PlaybackRate\r\n            playbackRateOptions={ this.props.playbackRateOptions }\r\n            playbackRate={ this.props.playbackRate }\r\n            name={ 'playbackRate' }\r\n            handlePlayBackRateChange={ this.props.setPlayBackRate }\r\n          />\r\n\r\n          {pictureInPicture}\r\n\r\n          <button\r\n            value=\"Toggle Sound\"\r\n            title=\"Toggle Sound\"\r\n            className={ style.playerButton }\r\n            onClick={ this.props.handleMuteVolume }>\r\n            { this.props.isMute ? <FontAwesomeIcon icon={ faVolumeMute } /> : <FontAwesomeIcon icon={ faVolumeUp } /> }\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayerControls.propTypes = {\r\n  playMedia: PropTypes.func,\r\n  currentTime: PropTypes.string,\r\n  timecodeOffset: PropTypes.string,\r\n  promptSetCurrentTime: PropTypes.func,\r\n  rollback: PropTypes.func,\r\n  handleMuteVolume: PropTypes.func,\r\n  duration: PropTypes.string,\r\n  isPlaying: PropTypes.bool,\r\n  isMute: PropTypes.bool,\r\n  skipBackward: PropTypes.func,\r\n  skipForward: PropTypes.func,\r\n  playbackRate: PropTypes.number,\r\n  playbackRateOptions: PropTypes.array,\r\n  setPlayBackRate: PropTypes.func,\r\n  pictureInPicture: PropTypes.func\r\n};\r\n\r\nexport default PlayerControls;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlayerControls\\TimeBox.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\digital-paper-edit\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\google-stt\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\create-entity-map\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\CustomEditor.js",["502"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Editor } from \"draft-js\";\r\n\r\n  \r\nimport WrapperBlock from './WrapperBlock';\r\n\r\n// NOTE: custom editor is in a separate class to minimise re-renders\r\n// if considering refactoring, removing the separate class, please double check\r\n// that doing so does not introduce uncessary re-renders first.\r\nclass CustomEditor extends React.Component {\r\n  handleWordClick = e => {\r\n    this.props.onWordClick(e);\r\n  };\r\n\r\n  renderBlockWithTimecodes = () => {\r\n    return {\r\n      component: WrapperBlock,\r\n      editable: true,\r\n      props: {\r\n        showSpeakers: this.props.showSpeakers,\r\n        showTimecodes: this.props.showTimecodes,\r\n        timecodeOffset: this.props.timecodeOffset,\r\n        editorState: this.props.editorState,\r\n        setEditorNewContentStateSpeakersUpdate: this.props.setEditorNewContentStateSpeakersUpdate,\r\n        onWordClick: this.handleWordClick,\r\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents,\r\n        isEditable: this.props.isEditable\r\n      }\r\n    };\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    // https://stackoverflow.com/questions/39182657/best-performance-method-to-check-if-contentstate-changed-in-draftjs-or-just-edi\r\n    if (nextProps.editorState !== this.props.editorState) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.isEditable !== this.props.isEditable) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.props.onChange(e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Editor\r\n        editorState={this.props.editorState}\r\n        onChange={this.handleOnChange}\r\n        stripPastedStyles\r\n        blockRendererFn={this.renderBlockWithTimecodes}\r\n        handleKeyCommand={this.props.handleKeyCommand}\r\n        keyBindingFn={this.props.customKeyBindingFn}\r\n        spellCheck={this.props.spellCheck}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomEditor;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\generate-entities-ranges\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\HowDoesThisWork.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\UpdateTimestamps\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\ExportOptions.js",["503"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport style from './index.module.css';\r\n\r\nclass ExportOptions extends React.Component {\r\n\r\n  render() {\r\n    const btns = this.props.exportOptionsList.map((opt, index) => {\r\n      return (<><button \r\n        key={opt.label+index}\r\n        title={ opt.label }\r\n        className={ style.playerButton }\r\n        key={ opt.value }\r\n        onClick={ this.props.handleExportOptionsChange }\r\n        value={ opt.value }>\r\n        {opt.label}\r\n      </button>\r\n        <br/>\r\n      </>);\r\n    });\r\n\r\n    return (\r\n      <div className={ style.settings }>\r\n        <h2 className={ style.header }>Export Options</h2>\r\n        <div className={ style.closeButton }\r\n          onClick={ this.props.handleExportToggle }\r\n        >\r\n          <FontAwesomeIcon icon={ faWindowClose } />\r\n        </div>\r\n\r\n        <div className={ style.controlsContainer }>\r\n          {btns}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExportOptions.propTypes = {\r\n  handleExportToggle: PropTypes.func\r\n//   showTimecodes: PropTypes.bool,\r\n//   showSpeakers: PropTypes.bool,\r\n//   timecodeOffset: PropTypes.number,\r\n//   handleShowTimecodes: PropTypes.func,\r\n//   handleShowSpeakers: PropTypes.func,\r\n//   handleSetTimecodeOffset: PropTypes.func,\r\n//   handleSettingsToggle: PropTypes.func,\r\n//   handlePauseWhileTyping: PropTypes.func,\r\n//   handleIsScrollIntoViewChange: PropTypes.func,\r\n//   handleRollBackValueInSeconds: PropTypes.func,\r\n//   defaultValueScrollSync: PropTypes.bool,\r\n//   defaultValuePauseWhileTyping: PropTypes.bool,\r\n//   defaultRollBackValueInSeconds: PropTypes.number,\r\n//   previewIsDisplayed: PropTypes.bool,\r\n//   handlePreviewIsDisplayed: PropTypes.func,\r\n//   // previewViewWidth: PropTypes.string,\r\n//   handleChangePreviewViewWidth: PropTypes.func,\r\n//   handleAnalyticsEvents: PropTypes.func\r\n};\r\n\r\nexport default ExportOptions;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\transcript-editor\\src\\Header.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\Word.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\PlaybackRate.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\config\\defaultHotKeys.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\keyboard-shortcuts\\hot-keys.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\ProgressBar.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\timed-text-editor\\WrapperBlock.js",["504"],"import React from 'react';\r\nimport { \r\n  EditorBlock, \r\n  Modifier, \r\n  EditorState, \r\n  SelectionState,\r\n  convertFromRaw,\r\n  convertToRaw\r\n } from 'draft-js';\r\n\r\nimport SpeakerLabel from './SpeakerLabel';\r\n// import { shortTimecode, secondsToTimecode } from '../../Util/timecode-converter/';\r\n\r\nimport {\r\n  shortTimecode,\r\n  secondsToTimecode\r\n} from '../../util/timecode-converter';\r\n\r\nimport style from './WrapperBlock.module.css';\r\n\r\nconst updateSpeakerName = (oldName, newName, state) => {\r\n  const contentToUpdate = convertToRaw(state);\r\n\r\n  contentToUpdate.blocks.forEach(block => {\r\n    if (block.data.speaker === oldName) {\r\n      block.data.speaker = newName;\r\n    }\r\n  })\r\n\r\n  return convertFromRaw(contentToUpdate);\r\n}\r\n\r\n\r\nclass WrapperBlock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      speaker: '',\r\n      start: 0,\r\n      timecodeOffset: this.props.blockProps.timecodeOffset\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { block } = this.props;\r\n    const speaker = block.getData().get('speaker');\r\n  \r\n    const start = block.getData().get('start');\r\n\r\n    this.setState({\r\n      speaker: speaker,\r\n      start: start\r\n    });\r\n  }\r\n  // reducing unnecessary re-renders\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    if (nextProps.block.getText() !== this.props.block.getText()) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.blockProps.showSpeakers !== this.props.blockProps.showSpeakers) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.blockProps.showTimecodes !== this.props.blockProps.showTimecodes) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.blockProps.timecodeOffset !== this.props.blockProps.timecodeOffset) {\r\n      return true;\r\n    }\r\n\r\n    if (nextState.speaker !== this.state.speaker) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.blockProps.isEditable !== this.props.blockProps.isEditable) {\r\n      return true;\r\n    }\r\n\r\n    if(nextProps.block.getData().get('speaker') !== this.state.speaker){\r\n      console.log('shouldComponentUpdate wrapper speaker', nextProps.block.getData().get('speaker') , this.state.speaker )\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate  = (prevProps, prevState) =>{\r\n\r\n    if(prevProps.block.getData().get('speaker') !== prevState.speaker){\r\n        console.log('componentDidUpdate wrapper speaker', prevProps.block.getData().get('speaker') , prevState.speaker );\r\n        \r\n        this.setState({\r\n          speaker: prevProps.block.getData().get('speaker')\r\n        })\r\n\r\n        return true;\r\n      }\r\n  }\r\n\r\n  handleOnClickEdit = () => {\r\n    const oldSpeakerName = this.state.speaker;\r\n    const newSpeakerName = prompt('New Speaker Name?', this.state.speaker);\r\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\r\n      this.setState({ speaker: newSpeakerName });\r\n      const isUpdateAllSpeakerInstances = confirm(`Would you like to replace all occurrences of ${oldSpeakerName} with ${newSpeakerName}?`);\r\n     \r\n      if (this.props.blockProps.handleAnalyticsEvents) {\r\n        this.props.blockProps.handleAnalyticsEvents({\r\n          category: 'WrapperBlock',\r\n          action: 'handleOnClickEdit',\r\n          name: 'newSpeakerName',\r\n          value: newSpeakerName\r\n        });\r\n      }\r\n\r\n      if(isUpdateAllSpeakerInstances){\r\n        const ContentState = this.props.blockProps.editorState.getCurrentContent();\r\n        const contentToUpdateWithSpekaers = updateSpeakerName(oldSpeakerName, newSpeakerName, ContentState);\r\n        this.props.blockProps.setEditorNewContentStateSpeakersUpdate(contentToUpdateWithSpekaers);\r\n      }\r\n      else{\r\n       // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\r\n        // selection points are tracked as key/offset pairs,\r\n        // where the key value is the key of the ContentBlock where the point is positioned\r\n        // and the offset value is the character offset within the block.\r\n\r\n        // Get key of the currentBlock\r\n        const keyForCurrentCurrentBlock = this.props.block.getKey();\r\n        // create empty selection for current block\r\n        // https://draftjs.org/docs/api-reference-selection-state#createempty\r\n        const currentBlockSelection = SelectionState.createEmpty(\r\n          keyForCurrentCurrentBlock\r\n        );\r\n        const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(\r\n          this.props.blockProps.editorState,\r\n          currentBlockSelection\r\n        );\r\n\r\n        const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\r\n        const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\r\n\r\n        // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\r\n        const newContentState = Modifier.mergeBlockData(\r\n          this.props.contentState,\r\n          currentBlockSelectionState,\r\n          newBlockDataWithSpeakerName\r\n        );\r\n\r\n        this.props.blockProps.setEditorNewContentStateSpeakersUpdate(newContentState);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTimecodeClick = () => {\r\n    this.props.blockProps.onWordClick(this.state.start);\r\n    if (this.props.blockProps.handleAnalyticsEvents) {\r\n      this.props.blockProps.handleAnalyticsEvents({\r\n        category: 'WrapperBlock',\r\n        action: 'handleTimecodeClick',\r\n        name: 'onWordClick',\r\n        value: secondsToTimecode(this.state.start)\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let startTimecode = this.state.start;\r\n    if (this.props.blockProps.timecodeOffset) {\r\n      startTimecode += this.props.blockProps.timecodeOffset;\r\n    }\r\n\r\n    const speakerElement = (\r\n      <SpeakerLabel\r\n        name={ this.state.speaker }\r\n        handleOnClickEdit={ this.handleOnClickEdit }\r\n        isEditable={this.props.blockProps.isEditable}\r\n      />\r\n    );\r\n\r\n    const timecodeElement = (\r\n      <span className={ style.time } onClick={ this.handleTimecodeClick }>\r\n        {shortTimecode(startTimecode)}\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div className={ style.WrapperBlock }>\r\n        <div\r\n          className={ [ style.markers, style.unselectable ].join(' ') }\r\n          contentEditable={ false }\r\n        >\r\n          {this.props.blockProps.showSpeakers ? speakerElement : ''}\r\n\r\n          {this.props.blockProps.showTimecodes ? timecodeElement : ''}\r\n        </div>\r\n        <div className={ style.text }>\r\n          <EditorBlock { ...this.props } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WrapperBlock;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\timecodeToSeconds.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\secondsToTimecode.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\util\\timecode-converter\\src\\padTimeToTimecode.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\settings\\TimecodeOffset\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\components\\media-player\\src\\Select.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\draftjs-to-digital-paper-edit\\index.js",["505"],"/**\r\n * Convert DraftJS to Digital Paper Edit format\r\n * More details see\r\n * https://github.com/bbc/digital-paper-edit\r\n */\r\nexport default (blockData) => {\r\n  const result = { words: [], paragraphs: [] };\r\n\r\n  blockData.blocks.forEach((block, index) => {\r\n    if (block.data.words !== undefined) {\r\n      // TODO: make sure that when restoring timecodes text attribute in block word data\r\n      // should be updated as well\r\n      const tmpParagraph = {\r\n        id: index,\r\n        start: block.data.words[0].start, //block.data.start,\r\n        end: block.data.words[block.data.words.length - 1].end,\r\n        speaker: block.data.speaker\r\n      };\r\n      result.paragraphs.push(tmpParagraph);\r\n      // using data within a block to get words info\r\n      const tmpWords = block.data.words.map((word) => {\r\n        const tmpWord = {\r\n          id: word.index,\r\n          start: word.start,\r\n          end: word.end,\r\n          text: null\r\n        };\r\n        // TODO: need to normalise various stt adapters\r\n        // so that when they create draftJs json, word text attribute\r\n        // has got consistent naming. `text` and not `punct` or `word`.\r\n        if (word.text) {\r\n          tmpWord.text = word.text;\r\n        }\r\n        else if (word.punct) {\r\n          tmpWord.text = word.punct;\r\n        }\r\n        else if (word.word) {\r\n          tmpWord.text = word.punct;\r\n        }\r\n\r\n        return tmpWord;\r\n      });\r\n      // flattening the list of words\r\n      result.words = result.words.concat(tmpWords);\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\speechmatics\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\amazon-transcribe\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\autoEdit2\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\bbc-kaldi\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\txt-speakers-timecodes\\index.js",["506"],"/**\r\n * Convert DraftJS to plain text with timecodes and speaker names\r\n *\r\n * Example:\r\n ```\r\n F_S12 \t [00:00:13] \t There is a day. About ten years ago when I asked a friend to hold a baby dinosaur robot upside down. It was a toy called plea. All\r\n ```\r\n *\r\n */\r\nimport { shortTimecode } from '../../util/timecode-converter/index.js';\r\n\r\nexport default (blockData) => {\r\n  const lines = blockData.blocks.map((block) => {\r\n    return `${ block.data.speaker } \\t [${ shortTimecode(block.data.start) }] \\t ${ block.text }`;\r\n  });\r\n\r\n  return lines.join('\\n\\n');\r\n};\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\docx\\index.js",["507"],"import { Document, Paragraph, TextRun, Packer } from 'docx';\r\nimport { shortTimecode } from '../../util/timecode-converter/';\r\n\r\nexport default (blockData, transcriptTitle) => {\r\n  // const lines = blockData.blocks.map(x => x.text);\r\n\r\n  return generateDocxFromDraftJs(blockData, transcriptTitle);\r\n  // return lines.join('\\n\\n');\r\n};\r\n\r\nfunction generateDocxFromDraftJs(blockData, transcriptTitle) {\r\n\r\n  const doc = new Document({\r\n    creator: 'Test',\r\n    description: 'Test Description',\r\n    title: transcriptTitle,\r\n  });\r\n\r\n  // Transcript Title\r\n  // TODO: get title in programmatically - optional value\r\n  const textTitle = new TextRun(transcriptTitle);\r\n  const paragraphTitle = new Paragraph();\r\n  paragraphTitle.addRun(textTitle);\r\n  paragraphTitle.heading1().center();\r\n  doc.addParagraph(paragraphTitle);\r\n\r\n  // add spacing\r\n  var paragraphEmpty = new Paragraph();\r\n  doc.addParagraph(paragraphEmpty);\r\n\r\n  blockData.blocks.forEach((draftJsParagraph) => {\r\n    // TODO: use timecode converter module to convert from seconds to timecode\r\n    const paragraphSpeakerTimecodes = new Paragraph(shortTimecode(draftJsParagraph.data.words[0].start));\r\n    const speaker = new TextRun(draftJsParagraph.data.speaker).bold().tab();\r\n    const textBreak = new TextRun('').break();\r\n    paragraphSpeakerTimecodes.addRun(speaker);\r\n    doc.addParagraph(paragraphSpeakerTimecodes);\r\n    const paragraphText = new Paragraph(draftJsParagraph.text);\r\n    paragraphText.addRun(textBreak);\r\n    doc.addParagraph(paragraphText);\r\n  });\r\n\r\n  const packer = new Packer();\r\n\r\n  packer.toBlob(doc).then(blob => {\r\n    const filename = `${ transcriptTitle }.docx`;\r\n    // // const type =  'application/octet-stream';\r\n    const a = document.createElement('a');\r\n    a.href = window.URL.createObjectURL(blob);\r\n    a.download = filename;\r\n    a.click();\r\n\r\n    return blob;\r\n  });\r\n\r\n}","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\txt\\index.js",["508"],"/**\r\n * Convert DraftJS to plain text without timecodes or speaker names\r\n * Text+speaker+timecode\r\n * TODO: have a separate one or some logic to get text without timecodes?\r\n *\r\n * Export looks like\r\n ```\r\n00:00:13\t\tF_S12\r\nThere is a day. About ten years ago when I asked a friend to hold a baby dinosaur called plea. All\r\n\r\n00:00:24\t\tF_S1\r\nthat\r\n\r\n00:00:24\t\tF_S12\r\nhe'd ordered and I was really excited about it because I've always loved about this one has really caught technical features. It had more orders and touch sensors. It had an infra red camera and one of the things that had was a tilt sensor so it. Knew what direction. It was facing. If and when you held it upside down.\r\n\r\n00:00:46\t\tU_UKN\r\nI thought.\r\n```\r\n */\r\n// import { shortTimecode } from '../../util/timecode-converter/';\r\n\r\nexport default (blockData) => {\r\n  // TODO: to export text without speaker or timecodes use line below\r\n  // const lines = blockData.blocks.map(paragraph => paragraph.text);\r\n  const lines = blockData.blocks.map(paragraph => {\r\n    // return `${ shortTimecode(paragraph.data.words[0].start) }\\t${ paragraph.data.speaker }\\n${ paragraph.text }`;\r\n    return `${ paragraph.text }`;\r\n  });\r\n\r\n  return lines.join('\\n\\n');\r\n};\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\csv.js",["509","510","511","512","513","514"],"function csvGenerator(srtJsonContent) {\r\n  let lines = 'N, In, Out, Text\\n';\r\n  srtJsonContent.forEach((srtLineO, index) => {\r\n    lines += `${ index + 1 },`;\r\n    //need to surround timecodes with \"\\\"\" escaped \" to escape the , for the milliseconds\r\n    lines += `\\\"${ srtLineO.start }\\\",\\\"${ srtLineO.end }\\\",`;\r\n    // removing line breaks and and removing \" as they break the csv.\r\n    // wrapping text in escaped \" to  escape any , for the csv.\r\n    // adding carriage return \\n to signal end of line in csv\r\n    // Preserving line break within srt lines to allow round trip from csv back to srt file in same format.\r\n    // by replacing \\n with \\r\\n.\r\n    lines += `\\\"${ srtLineO.text.replace(/\\n/g, '\\r\\n') }\\\"\\n`;\r\n  });\r\n\r\n  return lines;\r\n}\r\n\r\nexport default csvGenerator;","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\srt.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\ttml.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\itt.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\premiere.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\fold\\index.js",["515"],"'use strict';\r\nimport removeSpaceAfterCarriageReturn from '../util/remove-space-after-carriage-return.js';\r\n\r\n/*\r\n  * Helper function\r\n  * folds array of words\r\n  * adds `\\n`\r\n  * foldNumber = char after which to fold. eg 35 char default\r\n  * TODO: this could be refactored with smaller helper functions\r\n  */\r\nfunction foldWordsReturnArray(textArray, foldNumber = 35) {\r\n  var counter = 0;\r\n  var result = textArray.map((word, index, list) => {\r\n    counter += word.length + 1;\r\n    //resetting counter when there is a 'paragraph' line break \\n\\n\r\n    if (counter <= foldNumber) {\r\n    // if not last word in list\r\n    // cover edge case last element in array does not have a next element\r\n      if (list[index + 1] !== undefined) {\r\n        var nextElementLength = list[index + 1].length;\r\n        //check if adding next word would make the line go over the char limit foldNumber\r\n        if ((counter + nextElementLength) < foldNumber) {\r\n          return word;\r\n        } else {\r\n          // if it makes it go over, reset counter, return and add line break\r\n          counter = 0;\r\n\r\n          return `${ word }\\n`;\r\n        }\r\n        //last word in the list\r\n      } else {\r\n        return word;\r\n      }\r\n      // if not greater then char foldNumber\r\n    } else {\r\n      counter = 0;\r\n\r\n      return `${ word }\\n`;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/*\r\n* text string of words\r\n* foldNumber = char after which to fold. eg 35 char.\r\n*/\r\nfunction foldWords(text, foldNumber) {\r\n  // split on two line break\r\n  var lineArr = text.split('\\n\\n');\r\n  // fold each line on non fold number char count\r\n  var foldedWordsInArray = lineArr.map((line) => {\r\n  \treturn foldWordsReturnArray(line.split(' '), foldNumber);\r\n  });\r\n  // flatten result\r\n  var foldedWordsFlatten = foldedWordsInArray.map((line) => {\r\n    return line.join(' ');\r\n  });\r\n\r\n  // remove space after carriage return \\n in lines\r\n  const result = foldedWordsFlatten.map((r) => { return removeSpaceAfterCarriageReturn(r); });\r\n  // return text\r\n\r\n  return result.join('\\n\\n');\r\n}\r\n\r\nexport default foldWords;","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\line-break-between-sentences\\index.js",["516"],"'use strict';\r\n\r\nfunction addLineBreakBetweenSentences(text) {\r\n  return text.replace(/\\n/g, '\\n\\n');\r\n}\r\n\r\nexport default addLineBreakBetweenSentences;","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\divide-into-two-lines\\index.js",["517","518"],"'use strict';\r\nimport removeSpaceAtBeginningOfLine from '../util/remove-space-at-beginning-of-line.js';\r\n\r\nfunction divideIntoTwoLines(text) {\r\n  var lines = text.split('\\n');\r\n\r\n  var counter = 0;\r\n\r\n  var result = lines.map((l) => {\r\n    if (l === '') {\r\n      return l;\r\n    } else {\r\n      if (counter === 0) {\r\n        counter += 1;\r\n        if (l[l.length - 1][0] === '.') {\r\n          return l + '\\n\\n';\r\n        }\r\n\r\n        return l + '\\n';\r\n      } else if (counter === 1) {\r\n        counter = 0;\r\n\r\n        return l + '\\n\\n';\r\n      }\r\n    }\r\n  });\r\n\r\n  result = removeSpaceAtBeginningOfLine(result);\r\n  // remove empty lines from list to avoid unwanted space a beginning of line\r\n  result = result.filter(line => line.length !== 0);\r\n\r\n  result = result.join('').trim();\r\n\r\n  return result;\r\n}\r\n\r\nexport default divideIntoTwoLines;","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\text-segmentation\\index.js",["519"],"'use strict';\r\nimport tokenizer from 'sbd';\r\n\r\nfunction textSegmentation(text, honorifics) {\r\n  var optionalHonorifics = null;\r\n\r\n  if (honorifics !== undefined) {\r\n    optionalHonorifics = honorifics;\r\n  }\r\n\r\n  var options = {\r\n\t    'newline_boundaries': true,\r\n\t    'html_boundaries': false,\r\n\t    'sanitize': false,\r\n\t    'allowed_tags': false,\r\n\t    //TODO: Here could open HONORIFICS file and pass them in here I think\r\n\t    //abbreviations: list of abbreviations to override the original ones for use with other languages. Don't put dots in abbreviations.\r\n\t    'abbreviations': optionalHonorifics\r\n  };\r\n\r\n  var sentences = tokenizer.sentences(text, options);\r\n  var sentencesWithLineSpaces = sentences.join('\\n');\r\n\r\n  return sentencesWithLineSpaces;\r\n}\r\n\r\nexport default textSegmentation;\r\n","D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\stt-adapters\\bbc-kaldi\\group-words-by-speakers.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\format-seconds.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\escape-text.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\compose-subtitles\\util\\tc-format.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\util\\remove-space-after-carriage-return.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\react-transcript-editor\\export-adapters\\subtitles-generator\\presegment-text\\util\\remove-space-at-beginning-of-line.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\index.js",[],"D:\\react\\7\\linto-demo\\src\\dependencies\\slate-transcript-editor\\util\\timecode-converter\\src\\secondsToTimecode.js",[],{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","replacedBy":"523"},{"ruleId":"520","replacedBy":"524"},{"ruleId":"522","replacedBy":"525"},{"ruleId":"520","replacedBy":"526"},{"ruleId":"522","replacedBy":"527"},{"ruleId":"520","replacedBy":"528"},{"ruleId":"522","replacedBy":"529"},{"ruleId":"530","severity":1,"message":"531","line":28,"column":9,"nodeType":"532","messageId":"533","endLine":28,"endColumn":18},{"ruleId":"520","replacedBy":"534"},{"ruleId":"522","replacedBy":"535"},{"ruleId":"530","severity":1,"message":"536","line":43,"column":10,"nodeType":"532","messageId":"533","endLine":43,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":88,"column":15,"nodeType":"539","messageId":"540","endLine":88,"endColumn":17},{"ruleId":"520","replacedBy":"541"},{"ruleId":"522","replacedBy":"542"},{"ruleId":"543","severity":1,"message":"544","line":31,"column":11,"nodeType":"532","messageId":"545","endLine":31,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":36,"column":11,"nodeType":"532","messageId":"545","endLine":36,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":37,"column":9,"nodeType":"532","messageId":"545","endLine":37,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":41,"column":11,"nodeType":"532","messageId":"545","endLine":41,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":42,"column":9,"nodeType":"532","messageId":"545","endLine":42,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":47,"column":11,"nodeType":"532","messageId":"545","endLine":47,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":48,"column":9,"nodeType":"532","messageId":"545","endLine":48,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":52,"column":11,"nodeType":"532","messageId":"545","endLine":52,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":53,"column":9,"nodeType":"532","messageId":"545","endLine":53,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":57,"column":11,"nodeType":"532","messageId":"545","endLine":57,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":58,"column":9,"nodeType":"532","messageId":"545","endLine":58,"endColumn":16},{"ruleId":"543","severity":1,"message":"544","line":62,"column":11,"nodeType":"532","messageId":"545","endLine":62,"endColumn":16},{"ruleId":"543","severity":1,"message":"546","line":63,"column":9,"nodeType":"532","messageId":"545","endLine":63,"endColumn":16},{"ruleId":"547","severity":1,"message":"548","line":132,"column":42,"nodeType":"549","messageId":"550","endLine":132,"endColumn":44},{"ruleId":"530","severity":1,"message":"551","line":6,"column":3,"nodeType":"532","messageId":"533","endLine":6,"endColumn":9},{"ruleId":"530","severity":1,"message":"552","line":2,"column":8,"nodeType":"532","messageId":"533","endLine":2,"endColumn":17},{"ruleId":"553","severity":1,"message":"554","line":16,"column":9,"nodeType":"555","endLine":16,"endColumn":26},{"ruleId":"556","severity":2,"message":"557","line":107,"column":43,"nodeType":"532","messageId":"558","endLine":107,"endColumn":50},{"ruleId":"559","severity":1,"message":"560","line":6,"column":1,"nodeType":"561","endLine":49,"endColumn":3},{"ruleId":"559","severity":1,"message":"560","line":12,"column":1,"nodeType":"561","endLine":18,"endColumn":3},{"ruleId":"559","severity":1,"message":"560","line":4,"column":1,"nodeType":"561","endLine":9,"endColumn":3},{"ruleId":"559","severity":1,"message":"560","line":23,"column":1,"nodeType":"561","endLine":32,"endColumn":3},{"ruleId":"562","severity":1,"message":"563","line":6,"column":15,"nodeType":"564","messageId":"565","endLine":6,"endColumn":16,"suggestions":"566"},{"ruleId":"562","severity":1,"message":"563","line":6,"column":36,"nodeType":"564","messageId":"565","endLine":6,"endColumn":37,"suggestions":"567"},{"ruleId":"562","severity":1,"message":"563","line":6,"column":39,"nodeType":"564","messageId":"565","endLine":6,"endColumn":40,"suggestions":"568"},{"ruleId":"562","severity":1,"message":"563","line":6,"column":58,"nodeType":"564","messageId":"565","endLine":6,"endColumn":59,"suggestions":"569"},{"ruleId":"562","severity":1,"message":"563","line":12,"column":15,"nodeType":"564","messageId":"565","endLine":12,"endColumn":16,"suggestions":"570"},{"ruleId":"562","severity":1,"message":"563","line":12,"column":58,"nodeType":"564","messageId":"565","endLine":12,"endColumn":59,"suggestions":"571"},{"ruleId":"572","severity":1,"message":"573","line":1,"column":1,"nodeType":"574","messageId":"575","endLine":1,"endColumn":14,"fix":"576"},{"ruleId":"572","severity":1,"message":"573","line":1,"column":1,"nodeType":"574","messageId":"575","endLine":1,"endColumn":14,"fix":"577"},{"ruleId":"572","severity":1,"message":"573","line":1,"column":1,"nodeType":"574","messageId":"575","endLine":1,"endColumn":14,"fix":"578"},{"ruleId":"547","severity":1,"message":"579","line":9,"column":30,"nodeType":"549","messageId":"550","endLine":9,"endColumn":32},{"ruleId":"572","severity":1,"message":"573","line":1,"column":1,"nodeType":"574","messageId":"575","endLine":1,"endColumn":14,"fix":"580"},"no-native-reassign",["581"],"no-negated-in-lhs",["582"],["581"],["582"],["581"],["582"],["581"],["582"],"no-unused-vars","'typeAnnot' is assigned a value but never used.","Identifier","unusedVar",["581"],["582"],"'interpolationOptimization' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["581"],["582"],"no-redeclare","'words' is already defined.","redeclared","'content' is already defined.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'faSave' is defined but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["583","584"],["585","586"],["587","588"],["589","590"],["591","592"],["593","594"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"595","text":"596"},{"range":"597","text":"596"},{"range":"598","text":"596"},"Array.prototype.map() expects a value to be returned at the end of arrow function.",{"range":"599","text":"596"},"no-global-assign","no-unsafe-negation",{"messageId":"600","fix":"601","desc":"602"},{"messageId":"603","fix":"604","desc":"605"},{"messageId":"600","fix":"606","desc":"602"},{"messageId":"603","fix":"607","desc":"605"},{"messageId":"600","fix":"608","desc":"602"},{"messageId":"603","fix":"609","desc":"605"},{"messageId":"600","fix":"610","desc":"602"},{"messageId":"603","fix":"611","desc":"605"},{"messageId":"600","fix":"612","desc":"602"},{"messageId":"603","fix":"613","desc":"605"},{"messageId":"600","fix":"614","desc":"602"},{"messageId":"603","fix":"615","desc":"605"},[0,13],"",[0,13],[0,13],[0,13],"removeEscape",{"range":"616","text":"596"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"617","text":"618"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"619","text":"596"},{"range":"620","text":"618"},{"range":"621","text":"596"},{"range":"622","text":"618"},{"range":"623","text":"596"},{"range":"624","text":"618"},{"range":"625","text":"596"},{"range":"626","text":"618"},{"range":"627","text":"596"},{"range":"628","text":"618"},[265,266],[265,265],"\\",[286,287],[286,286],[289,290],[289,289],[308,309],[308,308],[672,673],[672,672],[715,716],[715,715]]